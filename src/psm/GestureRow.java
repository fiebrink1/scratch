/*
 * GUI element for a single gesture row of the Finger Therapy GUI
 */

/*
 * GestureRow.java
 *
 * Created on Aug 19, 2011, 3:11:31 PM
 */

package psm;

import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author fiebrink
 */
public class GestureRow extends javax.swing.JPanel {

    protected boolean isGestureEnabled = true;
    public static final String PROP_ISGESTUREENABLED = "isGestureEnabled"; //whether this gesture is "enabled" (i.e., matchable)

    /**
     * Get the value of isEnabled
     *
     * @return the value of isEnabled
     */
    public boolean isGestureEnabled() {
        return isGestureEnabled;
    }

    /**
     * Set the value of isEnabled
     *
     * @param isEnabled new value of isEnabled
     */
    public void setGestureEnabled(boolean isGestureEnabled) {
        boolean oldIsActive = this.isGestureEnabled;
        this.isGestureEnabled = isGestureEnabled;
        propertyChangeSupport.firePropertyChange(PROP_ISGESTUREENABLED, oldIsActive, isGestureEnabled);
    }

    /** Creates new form GestureRow */
    public GestureRow() {
        initComponents();
    }

    public GestureRow(String name, int num, String[] options) {
        initComponents();
        setGestureName(name);
        labelNum.setText("x " + num);
        comboActions.setModel(new DefaultComboBoxModel(options));
    }

    public void setNumExamples(int num) {
        labelNum.setText("x " + num);
    }

    public void setActive(boolean b) {
        statusBar.setEnabled(b);
        radioEnabled.setSelected(b);
    }

    

    protected String gestureName = "NewGesture";
    public static final String PROP_GESTURENAME = "gestureName";

    /**
     * Get the value of gestureName
     *
     * @return the value of gestureName
     */
    public String getGestureName() {
        return gestureName;
    }

    /**
     * Set the value of gestureName
     *
     * @param gestureName new value of gestureName
     */
    public final void setGestureName(String gestureName) {
        labelName.setText(gestureName);
        String oldGestureName = this.gestureName;
        this.gestureName = gestureName;
        propertyChangeSupport.firePropertyChange(PROP_GESTURENAME, oldGestureName, gestureName);
    }
    private java.beans.PropertyChangeSupport propertyChangeSupport = new java.beans.PropertyChangeSupport(this);

    /**
     * Add PropertyChangeListener.
     *
     * @param listener
     */
    @Override
    public void addPropertyChangeListener(java.beans.PropertyChangeListener listener) {
        propertyChangeSupport.addPropertyChangeListener(listener);
    }

    /**
     * Remove PropertyChangeListener.
     *
     * @param listener
     */
    @Override
    public void removePropertyChangeListener(java.beans.PropertyChangeListener listener) {
        propertyChangeSupport.removePropertyChangeListener(listener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        labelName = new javax.swing.JLabel();
        labelNum = new javax.swing.JLabel();
        buttonAdd = new javax.swing.JButton();
        buttonRemove = new javax.swing.JButton();
        comboActions = new javax.swing.JComboBox();
        radioEnabled = new javax.swing.JRadioButton();
        statusBar = new javax.swing.JProgressBar();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(500, 60));
        setMinimumSize(new java.awt.Dimension(300, 40));
        setPreferredSize(new java.awt.Dimension(300, 40));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setSelected(true);
        jCheckBox1.setMaximumSize(new java.awt.Dimension(30, 30));
        jCheckBox1.setMinimumSize(new java.awt.Dimension(30, 30));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        add(jCheckBox1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(100, 40));
        jPanel2.setMinimumSize(new java.awt.Dimension(100, 40));
        jPanel2.setPreferredSize(new java.awt.Dimension(100, 40));
        jPanel2.setLayout(new java.awt.GridLayout(2, 1));

        labelName.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        labelName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelName.setText("Left 1");
        labelName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelNameMouseClicked(evt);
            }
        });
        jPanel2.add(labelName);

        labelNum.setFont(new java.awt.Font("Lucida Console", 0, 10)); // NOI18N
        labelNum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNum.setText("x 15");
        jPanel2.add(labelNum);

        add(jPanel2);

        buttonAdd.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        buttonAdd.setText("+");
        buttonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        buttonAdd.setMaximumSize(new java.awt.Dimension(30, 30));
        buttonAdd.setMinimumSize(new java.awt.Dimension(30, 30));
        buttonAdd.setPreferredSize(new java.awt.Dimension(30, 30));
        buttonAdd.setSize(new java.awt.Dimension(30, 30));
        buttonAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAddMouseClicked(evt);
            }
        });
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });
        add(buttonAdd);

        buttonRemove.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        buttonRemove.setText("-");
        buttonRemove.setMargin(new java.awt.Insets(0, 0, 0, 0));
        buttonRemove.setMaximumSize(new java.awt.Dimension(30, 30));
        buttonRemove.setMinimumSize(new java.awt.Dimension(30, 30));
        buttonRemove.setPreferredSize(new java.awt.Dimension(30, 30));
        buttonRemove.setSize(new java.awt.Dimension(30, 30));
        add(buttonRemove);

        comboActions.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        comboActions.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Left" }));
        comboActions.setMaximumSize(new java.awt.Dimension(120, 40));
        comboActions.setMinimumSize(new java.awt.Dimension(120, 40));
        comboActions.setPreferredSize(new java.awt.Dimension(120, 40));
        comboActions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionsActionPerformed(evt);
            }
        });
        add(comboActions);

        radioEnabled.setBackground(new java.awt.Color(255, 255, 255));
        radioEnabled.setForeground(new java.awt.Color(255, 0, 0));
        add(radioEnabled);

        statusBar.setValue(66);
        add(statusBar);
    }// </editor-fold>//GEN-END:initComponents


    public void addAddButtonMouseListener(MouseAdapter a) {
        buttonAdd.addMouseListener(a);
    }

    public void addRemoveButtonMouseListener(MouseAdapter a) {
        buttonRemove.addMouseListener(a);
    }

    public void addActionChoiceListener(ActionListener a) {
        comboActions.addActionListener(a);
    }

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAddMouseClicked
    }//GEN-LAST:event_buttonAddMouseClicked

    private void comboActionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionsActionPerformed
    }//GEN-LAST:event_comboActionsActionPerformed

    private void labelNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelNameMouseClicked
        String s = (String)JOptionPane.showInputDialog(this, "New name?", labelName.getText() );
        if (s.length() != 0)    {
            labelName.setText(s);
        }
    }//GEN-LAST:event_labelNameMouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        setGestureEnabled(jCheckBox1.isSelected());
        if (!jCheckBox1.isSelected()) {
            statusBar.setEnabled(false);
            statusBar.setValue(0);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    public String getComboActionChoice() {
        return (String) comboActions.getSelectedItem();
    }

    //Range: 0 to 100 (do remapping in calling code)
    public void setStatus(int s) {
        statusBar.setValue(s);
    }

    public void selectAction(int actionIndex) {
        comboActions.setSelectedIndex(actionIndex);
    }

    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                // ChuckConfigurationForm panel = new ChuckConfigurationForm(c);

                // panel.setVisible(true);
                JFrame frame = new JFrame();
                frame.setSize(new Dimension(600, 60));
                String[] labels= {"Left", "Right", "Up", "Down"};
                final GestureRow panel = new GestureRow("Yo", 20, labels);
                panel.addAddButtonMouseListener(new MouseAdapter() {

                    @Override
                    public void mousePressed(MouseEvent me) {
                        panel.setActive(true);
                    }

                    @Override
                    public void mouseReleased(MouseEvent me) {
                        panel.setActive(false);
                    }

                });
                /*
                panel.addRemoveButtonMouseListener(new MouseAdapter() {
                @Override
                    public void mouseClicked(MouseEvent me) {
                    }
                });
                 panel.addDeleteButtonMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent me) {
                        System.out.println("Delete");
                    }
                }); 
                panel.addActionChoiceListener(new ActionListener() {

                    public void actionPerformed(ActionEvent ae) {
                    }
                }); */


                frame.add(panel);
                frame.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonRemove;
    private javax.swing.JComboBox comboActions;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelNum;
    private javax.swing.JRadioButton radioEnabled;
    private javax.swing.JProgressBar statusBar;
    // End of variables declaration//GEN-END:variables

}
